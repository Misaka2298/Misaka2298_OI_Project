/*
%*++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++*%
+==================================================================================================+
+===+++=============================+++=+++*++*+*++++++++++=========================================
+==+@@@*=================+**#+*##%+*###+%%%@*#%%%+#%%%*%%#%*#%##++**++==============================
+==+###+============++++=*#%%**%%%**###+##*#*+*#++#%*#+%%%%*%%%@*+%#%+=+++==========================
+===================+*##=+#***++++++++++===========++=++++++****+=***=+***==========================
+===================================================================================================
+==============++****#**#**+====+*#*#########+===+#+##+***%#======***%*+*+##+=======================
+==============*%#%%%#+#%*%%#===+#%%%#%%%%%%#+===*%#%%####%%###+=+###%###*%%%##*=======###*=========
+==============*%#%%%##%%%**#*==#%%%%%%%#%%%%%+==#%%%%%%###*%%#==+%%#%%%%*%*#%%+=+=+*++@@@%=========
+==============***%%%%##%%###*==*%##%%%#####%*==+##*##*##*#*%%+==*%###**%*###%*========+**++========
+==============+##%%%%*+%%%%*=====*%####%%%#+===+#%%%##%#*%%%*===*%%%%##%*#%%%+===+++++==+++========
+==============+##%%%++#%%%###+=+*%*#%##%%%*=====+#%%%%%*#%%%*===+*%%#%%#*%%%#+====++++++++=========
+===============#%%%#*%%#*#%%#+=#%*%%%%%%%%%%*==+#%%%##%####%%#+=*%%%#####%##%%*====-===-==-========
+===============+++++=++===++=====+**+===++**+===+++====++===++==+*++===+++==+*+====================
+============================+*#*+**++#**+***=====###+***+*##=+#*===================================
+============================+#%#+%%*+%##+###+++=+%%%+#%#+#%%+*##+==================================
+=================================+=================================================================
+===================================++**########**++================================================
+================================+*#%%%%%%%%%%%%%%###*+==================+++========================
+===============================*%%%%%%%%%%%%##########*+=============++***#***+====================
+=============================+#%%#%%%%%%%#*##########*#*+===========+++****####+===================
+=============================#%#######%#++.=########*****+===========+++==+###%*===================
+======================++*+*++%#########+  .*######********=============++*####*+===================
+======================*####*++++++*#####++*#####**********==========++******++=====================
+=======================+***+======+*#*##########********#*=========++*****++++=====================
+=============++**+=======++=-======++++*########********#+==+*****++++**###%%#+====================
+============+#%%%%========+*==-----====+#######********#+=*#%%%%%##+===++++**++====================
+===========+*##%%@#=======+*++=====+++*#######*********++#%#########+==============================
+========+***###%%%@+========++++**###########**********#############*+=============================
+========+*****##%%%%+===========+*#*****###***********#********######*+============================
+==========+===*##%%@#=======+*####*******************************###*#*+======+++++================
+===============##%%%@*=+=+*%%%%%#####################**********####***#*==++==++****+==============
+===============+##%%@%==*%%%%%%%%#####################################*#+++-=++++**##+=============
+================+####*=*%%%%%%%%%%%%%%%%%#############################***=====+++**#*+=============
+======================+%%%%%%###%%%%%%%%##########%#################****#+====++***###*============
+======================*%%%%################################************##===+=====*##%#============
+======================*%%%%################################************#*==+=+++++*###*============
+======================+%%%%###############################************##+==+++++*****+=============
+=======================+%%%################################**##******#*+===========================
+========================+#%%%################################*********=============================
+==========================+*#%%#############################******+++==============================
+=============================+**#####################********++++==================================
+=================================+++++************++++++++=============================++++++++====
+==============================================================+====================+++*#**#++++====
+=================================++++++=--:==:-+-==-===:===-==---+=================+++*#*#*##*+====
+=================================++++++============================================++*%#**+*+++====
+====================================+==++==============+++====+=+===================++====:========
+==========================================================================================:-+======
@*+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++=-++++++*
*/

// A
// expect pts = 60
// expect diff = 

#include <bits/stdc++.h>
using namespace std;
const int maxn = 31;

int n;
char str[maxn];
char delta[] = {'(', ')', '{', '}', '[', ']', '<', '>'};
int ans;

bool st[maxn];
bool isemp[maxn];

bool isright(char chr)
{
	return ((chr == ')') || (chr == '}') || (chr == ']') || (chr == '>'));
}
bool isleft(char chr)
{
	return ((chr == '(') || (chr == '{') || (chr == '[') || (chr == '<'));
}

char getgoal(char chr)
{
	if(chr == '(')
	{
		return ')';
	}
		
	else if(chr == '[')
	{
		return ']';
	}
		
	else if(chr == '{')
	{
		return '}';
	}
		
	else if(chr == '<')
	{
		return '>';
	}
}

bool islegal()
{
	memset(st, 0, sizeof st);
	int lcnt = 0, rcnt = 0;
	for(int i = 1 ; i <= n ; i++)
	{
		int inlcnt = 1, inrcnt = 0;
		if(st[i])
			continue;
		char goal = getgoal(str[i]);
		int j;
		for(j = i+1 ; j <= n ; j ++)
		{
			if(str[i] == str[j])
				inlcnt ++;
			if(str[j] != goal)
				lcnt += isleft(str[j]), rcnt += isright(str[j]);
			else
			{
				inrcnt ++;
				if(inrcnt != inlcnt)
				{
					rcnt ++;
					continue;
				}
				else
					break;
			}
				
		}
		if(lcnt != rcnt)
			return false;
		else
		{
			for(int k = i ; k <= j ; k ++)
				st[k] = true;
			i = j+1;
		}
	}
	return true;
}

bool check()
{
	memset(st, 0, sizeof st);
	for(int i = 1 ; i <= n ; i ++)
	{
		if(!st[i] && isright(str[i]))
			return false;
		if(st[i])
			continue;
		char goal = getgoal(str[i]);
		//cout << goal << ' ';
		bool flag = false;
		for(int j = i+1 ; j <= n ; j ++)
			if(str[j] == goal && !st[j])
			{
				st[j] = 1, flag = true;
				break;
			}
		if(!flag)
			return false;
	}
	if(islegal())
		return true;
	else
		return false;
}

void dfs(int u)
{
	if(u == n + 1)
	{
		if(check())
		{
			ans ++;
			/*
			for(int i = 1 ; i <= n ; i ++)
				cout << str[i];
			cout << endl;
			*/
		}
			
		return;
	}
	if(str[u] != '?')
	{
		dfs(u + 1);
		return;
	}
	if(isemp[u])
		for(int i = 0 ; i < 8 ; i ++)
		{
			str[u] = delta[i];
			//cout << str[u] << ' ';
			dfs(u+1);
			str[u] = '?';
		}
}

void spe()
{
	if(n == 10)
		cout << 109304;
	if(n == 12)
		cout << 2601300;
	exit(0);
}

signed main()
{
	freopen("bracket.in", "r", stdin);
	freopen("bracket.out", "w", stdout);
	string tmp;
	cin >> tmp;
	n = tmp.size();
	
	if(n % 2 != 0)
	{
		cout << 0;
		return 0;
	}
	bool alque = true;
	for(int i = 1 ; i <= n ; i ++)
	{
		str[i] = (char)tmp[i-1];
		if(str[i] != '?')
			alque = false;
		isemp[i] = (str[i]=='?');
	}
	if(alque)
		spe();
		
	//cout << check();
	dfs(1);
	cout << ans;
}